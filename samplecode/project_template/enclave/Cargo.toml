[workspace]
# NEEDED, else
#    Compiling http-grpc-client v0.3.0 (/.../rs-common/http-grpc-client)
# error[E0152]: duplicate lang item in crate `std` (which `serde` depends on): `panic_impl`.
#   |
#   = note: the lang item is first defined in crate `sgx_tstd` (which `http_req` depends on)
#   = note: first definition in `sgx_tstd` loaded from /.../rs-common/tests_sgx/samplecode/project_template/enclave/target/release/deps/libsgx_tstd-ebb37a331528b577.rmeta
#   = note: second definition in `std` loaded from /.../.rustup/toolchains/nightly-2022-10-22-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/libstd-7b2106000b625742.rlib
# Why?
# b/c of parity-scale-codec: with resolver = "2"
# serde v1.0.152
# ├── http-grpc-client v0.3.0 (/.../rs-common/http-grpc-client)
# │   └── template v1.0.0 (/.../rs-common/tests_sgx/samplecode/project_template/enclave)
# └── serde_json v1.0.91
#     └── http-grpc-client v0.3.0 (/.../rs-common/http-grpc-client) (*)
# serde v1.0.152
# └── toml v0.5.11
#     └── proc-macro-crate v1.2.1
#         └── parity-scale-codec-derive v3.1.4 (proc-macro)
#             └── parity-scale-codec v3.2.2
#                 └── http-grpc-client v0.3.0 (/.../rs-common/http-grpc-client) (*)
# But with resolver = "2" we get
# serde v1.0.152
# ├── http-grpc-client v0.3.0 (/.../rs-common/http-grpc-client)
# │   └── template v1.0.0 (/.../rs-common/tests_sgx/samplecode/project_template/enclave)
# ├── serde_json v1.0.91
# │   └── http-grpc-client v0.3.0 (/.../rs-common/http-grpc-client) (*)
# └── toml v0.5.11
#     └── proc-macro-crate v1.2.1
#         └── parity-scale-codec-derive v3.1.4 (proc-macro)
#             └── parity-scale-codec v3.2.2
#                 └── http-grpc-client v0.3.0 (/.../rs-common/http-grpc-client) (*)
resolver = "2"

[package]
name = "template"
version = "1.0.0"
authors = ["The Teaclave Authors"]

[lib]
name = "sample" # Library name. If you change this, please reflect those changes in the Makefile on the variable ENCLAVE_CARGO_LIB
crate-type = ["staticlib"]

[features]
default = []

[dependencies]
lib-garble-rs = { path = "../../../../lib-garble-rs", default-features = false, features = ["sgx"] }
ipfs-client-http-req = { path = "../../../../ipfs-client-http-req", default-features = false, features = ["sgx"] }
# ADDED:
# The sp-io patch MUST activate sp-io/sgx else it FAIL with:
# Compiling environmental v1.1.3 (https://github.com/integritee-network/worker.git?rev=b54c825#b54c825f)
# error: Either feature "std" or feature "sgx" must be enabled
#   --> /home/pratn/.cargo/git/checkouts/worker-f7051a772af62690/b54c825/core-primitives/substrate-sgx/environmental/src/lib.rs:57:1
#    |
# 57 | compile_error!("Either feature \"std\" or feature \"sgx\" must be enabled");
#    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
# error[E0433]: failed to resolve: use of undeclared crate or module `std`
#   --> /home/pratn/.cargo/git/checkouts/worker-f7051a772af62690/b54c825/core-primitives/substrate-sgx/environmental/src/lib.rs:75:9
#    |
# 75 | pub use std::thread::LocalKey;
#    |         ^^^ use of undeclared crate or module `std`
#
# NOTE: we NEED a "fake" dependency here(and it MUST match the path below) to force sp-io to be downloaded
# (This is normally a dep of various crates inside integritee-worker)
# else:
#     Updating git repository `https://github.com/paritytech/substrate.git`
# error: failed to select a version for `sp-io`.
#     ... required by package `template v1.0.0 (/home/pratn/Documents/interstellar/rs-common/tests_sgx/samplecode/project_template/enclave)`
# versions that meet the requirements `^7` are: 7.0.0
# the package `template` depends on `sp-io`, with features: `sgx` but `sp-io` does not have these features.
sp-io = { version = "7.0.0", git = "https://github.com/integritee-network/worker.git", rev = "b54c825", default-features = false, features = ["sgx"] }
# Same issues from this dep:
# We MUST enable "sp-application-crypto/full_crypto; it is normally done by sp-io but only for "std"
# So we add a "fake" dep to "sp-application-crypto" here
# cf /.../integritee-worker/core/parentchain/light-client/Cargo.toml
# and /.../integritee-worker/app-libs/stf/Cargo.toml
# WITHOUT:
#    Compiling sp-application-crypto v7.0.0 (https://github.com/paritytech/substrate.git?branch=polkadot-v0.9.36#cb4f2491)
# error[E0046]: not all trait items implemented, missing: `Pair`
#    --> /home/xxx/.cargo/git/checkouts/substrate-7e08433d4c370a21/cb4f249/primitives/application-crypto/src/lib.rs:274:3
#     |
# 274 |         impl $crate::CryptoType for Public {}
#     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ missing `Pair` in implementation
sp-application-crypto = { default-features = false, features = ["full_crypto"], git = "https://github.com/paritytech/substrate.git", branch = "polkadot-v0.9.36" }

[target.'cfg(not(target_env = "sgx"))'.dependencies] # You can remove what you don't need, except types and tstd
sgx_types = { git = "https://github.com/apache/teaclave-sgx-sdk.git", rev = "v1.1.6" }
sgx_tstd = { default-features = false, git = "https://github.com/apache/teaclave-sgx-sdk.git", features = ["backtrace"], rev = "v1.1.6" }
sgx_tcrypto = { git = "https://github.com/apache/teaclave-sgx-sdk.git", rev = "v1.1.6" }
sgx_trts = { git = "https://github.com/apache/teaclave-sgx-sdk.git", rev = "v1.1.6" }
sgx_tseal = { git = "https://github.com/apache/teaclave-sgx-sdk.git", rev = "v1.1.6" }
sgx_serialize = { git = "https://github.com/apache/teaclave-sgx-sdk.git", rev = "v1.1.6" }
sgx_alloc = { git = "https://github.com/apache/teaclave-sgx-sdk.git", rev = "v1.1.6" }
sgx_libc = { git = "https://github.com/apache/teaclave-sgx-sdk.git", rev = "v1.1.6" }

################################################################################
# patches below are copy-pasted(and adapted) from https://github.com/integritee-network/worker/blob/b54c825fb13fe99f77fe549798a6c63853d81c34/enclave-runtime/Cargo.toml#L137
# adapted = local patches are rewritten to a git url
#
# NOTE: it COULD(and probably CAN) compile without those, but we are interested in making our lib
# compile with integritee teaclave-flavored NOT just standard teaclave
# and https://github.com/integritee-network/worker/blob/master/core-primitives/substrate-sgx/sp-io/Cargo.toml
#
# NOTE: update in tests_sgx/samplecode/project_template/app/Cargo.toml if you change those!
[patch.crates-io]
env_logger = { git = "https://github.com/integritee-network/env_logger-sgx" }
getrandom = { git = "https://github.com/integritee-network/getrandom-sgx", branch = "update-v2.3" }
log = { git = "https://github.com/integritee-network/log-sgx" }

[patch."https://github.com/mesalock-linux/log-sgx"]
log = { git = "https://github.com/integritee-network/log-sgx" }

[patch."https://github.com/paritytech/substrate"]
sp-io = { version = "7.0.0", git = "https://github.com/integritee-network/worker.git", rev = "b54c825" }
[patch."https://github.com/paritytech/substrate.git"]
sp-io = { version = "7.0.0", git = "https://github.com/integritee-network/worker.git", rev = "b54c825" }

#[patch."https://github.com/integritee-network/frontier"]
#pallet-evm = { path = "../../frontier/frame/evm"}

[patch."https://github.com/apache/teaclave-sgx-sdk.git"]
sgx_alloc = { version = "1.1.6", git = "https://github.com/apache/incubator-teaclave-sgx-sdk", branch = "v1.1.6-testing" }
sgx_crypto_helper = { version = "1.1.6", git = "https://github.com/apache/incubator-teaclave-sgx-sdk", branch = "v1.1.6-testing" }
sgx_libc = { version = "1.1.6", git = "https://github.com/apache/incubator-teaclave-sgx-sdk", branch = "v1.1.6-testing" }
sgx_rand = { version = "1.1.6", git = "https://github.com/apache/incubator-teaclave-sgx-sdk", branch = "v1.1.6-testing" }
sgx_serialize = { version = "1.1.6", git = "https://github.com/apache/incubator-teaclave-sgx-sdk", branch = "v1.1.6-testing" }
sgx_serialize_derive = { version = "1.1.6", git = "https://github.com/apache/incubator-teaclave-sgx-sdk", branch = "v1.1.6-testing" }
sgx_serialize_derive_internals = { version = "1.1.6", git = "https://github.com/apache/incubator-teaclave-sgx-sdk", branch = "v1.1.6-testing" }
sgx_tcrypto = { version = "1.1.6", git = "https://github.com/apache/incubator-teaclave-sgx-sdk", branch = "v1.1.6-testing" }
sgx_tcrypto_helper = { version = "1.1.6", git = "https://github.com/apache/incubator-teaclave-sgx-sdk", branch = "v1.1.6-testing" }
sgx_trts = { version = "1.1.6", git = "https://github.com/apache/incubator-teaclave-sgx-sdk", branch = "v1.1.6-testing" }
sgx_tse = { version = "1.1.6", git = "https://github.com/apache/incubator-teaclave-sgx-sdk", branch = "v1.1.6-testing" }
sgx_tseal = { version = "1.1.6", git = "https://github.com/apache/incubator-teaclave-sgx-sdk", branch = "v1.1.6-testing" }
sgx_tstd = { version = "1.1.6", git = "https://github.com/apache/incubator-teaclave-sgx-sdk", branch = "v1.1.6-testing" }
sgx_tunittest = { version = "1.1.6", git = "https://github.com/apache/incubator-teaclave-sgx-sdk", branch = "v1.1.6-testing" }
sgx_types = { version = "1.1.6", git = "https://github.com/apache/incubator-teaclave-sgx-sdk", branch = "v1.1.6-testing" }

#[patch."https://github.com/scs/substrate-api-client"]
#substrate-api-client = { path = "../../../scs/substrate-api-client" }

#[patch."https://github.com/integritee-network/pallets.git"]
#pallet-parentchain = { path = "../../pallets/parentchain" }
#itp-types = {  path = "../../pallets/primitives/types" }
#itp-utils = {  path = "../../pallets/primitives/utils" }

#[patch."https://github.com/integritee-network/http_req"]
#http_req-sgx = {  package = "http_req", path = '../../http_req' }